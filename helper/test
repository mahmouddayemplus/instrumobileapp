import React, { useState, useEffect } from 'react';
import { View, TextInput, FlatList, Text, StyleSheet } from 'react-native';
import * as FileSystem from 'expo-file-system';

export default function SparesJSONSearch() {
  const [query, setQuery] = useState('');
  const [spareSearch, setSpareSearch] = useState([]);
  const [allSpares, setAllSpares] = useState([]);

  // Load JSON on app start
  async function loadSparesJSON() {
    try {
      // Local file in assets
      const jsonUri = FileSystem.documentDirectory + 'spares.json';
      const fileInfo = await FileSystem.getInfoAsync(jsonUri);

      let jsonString;

      if (fileInfo.exists) {
        jsonString = await FileSystem.readAsStringAsync(jsonUri);
      } else {
        // If file not exists locally, load bundled asset
        jsonString = await FileSystem.readAsStringAsync(
          require('./assets/spares.json')
        );
      }

      const data = JSON.parse(jsonString);
      setAllSpares(data);
      setSpareSearch(data);
    } catch (err) {
      console.error('Error loading JSON:', err);
    }
  }

  // Filter spares based on query
  useEffect(() => {
    if (!query || query.trim() === '') {
      setSpareSearch(allSpares);
    } else {
      const q = query.toLowerCase();
      const results = allSpares.filter(
        s =>
          s.new.toLowerCase().includes(q) ||
          s.old.toLowerCase().includes(q) ||
          s.description.toLowerCase().includes(q)
      );
      setSpareSearch(results);
    }
  }, [query, allSpares]);

  useEffect(() => {
    loadSparesJSON();
  }, []);

   